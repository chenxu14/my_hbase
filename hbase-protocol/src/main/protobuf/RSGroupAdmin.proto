/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package hbase.pb;

option java_package = "org.apache.hadoop.hbase.protobuf.generated";
option java_outer_classname = "RSGroupAdminProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

import "HBase.proto";
import "RSGroup.proto";

/** Group level protobufs */

message GetRSGroupInfoRequest {
  required string r_s_group_name = 1;
}

message GetRSGroupInfoResponse {
  optional RSGroupInfo r_s_group_info = 1;
}

message GetRSGroupInfoOfTableRequest {
  required TableName table_name = 1;
}

message GetRSGroupInfoOfTableResponse {
  optional RSGroupInfo r_s_group_info = 1;
}

message BalanceRSGroupRequest {
  required string r_s_group_name = 1;
}

message BalanceRSGroupResponse {
  required bool balanceRan = 1;
}

message ListRSGroupInfosRequest {
}

message ListRSGroupInfosResponse {
  repeated RSGroupInfo  r_s_group_info = 1;
}

message GetRSGroupInfoOfServerRequest {
  required ServerName server = 1;
}

message GetRSGroupInfoOfServerResponse {
  optional RSGroupInfo r_s_group_info = 1;
}

message RefreshGroupServersRequest {
}

message RefreshGroupServersResponse {
}

message MoveTableToGroupRequest {
  required TableName table_name = 1;
  required string group_name = 2;
}

message MoveTableToGroupResponse {
}

message MoveServerToGroupRequest {
  required ServerName server = 1;
  required string group_name = 2;
}

message MoveServerToGroupResponse {
}

service RSGroupAdminService {
  rpc GetRSGroupInfo(GetRSGroupInfoRequest)
    returns (GetRSGroupInfoResponse);

  rpc GetRSGroupInfoOfTable(GetRSGroupInfoOfTableRequest)
    returns (GetRSGroupInfoOfTableResponse);

  rpc GetRSGroupInfoOfServer(GetRSGroupInfoOfServerRequest)
    returns (GetRSGroupInfoOfServerResponse);

  rpc BalanceRSGroup(BalanceRSGroupRequest)
    returns (BalanceRSGroupResponse);

  rpc ListRSGroupInfos(ListRSGroupInfosRequest)
    returns (ListRSGroupInfosResponse);

  rpc RefreshGroupServers(RefreshGroupServersRequest)
    returns (RefreshGroupServersResponse);

  rpc MoveTableToGroup(MoveTableToGroupRequest)
    returns (MoveTableToGroupResponse);

  rpc MoveServerToGroup(MoveServerToGroupRequest)
    returns (MoveServerToGroupResponse);
}
